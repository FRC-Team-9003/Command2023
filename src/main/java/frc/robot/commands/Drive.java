// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// ROBOTBUILDER TYPE: Command.

package frc.robot.commands;

import edu.wpi.first.wpilibj2.command.CommandBase;
import frc.robot.subsystems.Drivetrain;

// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=IMPORTS

/** */
public class Drive extends CommandBase {

  // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS
  private final Drivetrain m_driveTrain;
  private double m_xstick;
  private double m_ystick;
  private double m_rotation;

  private double start;
  private double m_encoderTarget;
  // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=VARIABLE_DECLARATIONS

  // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS

  public Drive(
      double xstick, double ystick, double rotation, double encoderTarget, Drivetrain subsystem) {
    m_xstick = xstick;
    m_ystick = ystick;
    m_rotation = rotation;

    m_driveTrain = subsystem;

    start = m_driveTrain.getEncoderValue();
    m_encoderTarget = encoderTarget;

    addRequirements(m_driveTrain);
  }

  public Drive(double xstick, double ystick, double encoderTarget, Drivetrain subsystem) {
    m_xstick = xstick;
    m_ystick = ystick;
    m_rotation = 0;

    m_driveTrain = subsystem;

    m_encoderTarget = encoderTarget;
    start = m_driveTrain.getEncoderValue();

    addRequirements(m_driveTrain);
  }

  // Called when the command is initially scheduled.
  @Override
  public void initialize() {}

  // Called every time the scheduler runs while the command is scheduled.
  @Override
  public void execute() {
    m_driveTrain.drive(m_xstick, m_ystick, m_rotation);
  }

  // Called once the command ends or is interrupted.
  @Override
  public void end(boolean interrupted) {
    m_driveTrain.drive(0, 0, 0);
  }

  // Returns true when the command should end.
  @Override
  public boolean isFinished() {
    if (m_encoderTarget > start) {
      return m_driveTrain.getEncoderValue() > m_encoderTarget;
    }
    return m_driveTrain.getEncoderValue() < m_encoderTarget;
  }

  @Override
  public boolean runsWhenDisabled() {
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
    return false;

    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=DISABLED
  }
}
