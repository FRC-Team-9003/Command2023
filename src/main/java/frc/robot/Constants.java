// RobotBuilder Version: 5.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

package frc.robot;

/**
 * The Constants class provides a convenient place for teams to hold robot-wide numerical or boolean
 * constants. This class should not be used for any other purpose. All constants should be declared
 * globally (i.e. public static). Do not put anything functional in this class.
 *
 * <p>It is advised to statically import this class (or one of its inner classes) wherever the
 * constants are needed, to reduce verbosity.
 */
public class Constants {
  public static final class DriveTrain {
    public enum mecDriveCanID {
      rightFront(4),
      leftFront(5),
      rightBack(6),
      leftBack(7);

      public final int id;

      mecDriveCanID(int value) {
        this.id = value;
      }
    }

    public enum secDriveTrain {
      front(8),
      back(9);

      public final int id;

      secDriveTrain(int value) {
        this.id = value;
      }
    }
  }

  public static final class ArmConsts {
    public enum ArmCAN {
      armRight(20),
      armLeft(21);

      public final int id;

      ArmCAN(int value) {
        this.id = value;
      }
    }
  }

  public static final class ElevatorConsts {
    public enum ELEV {
      elevCan(10);

      public final int id;

      ELEV(int value) {
        this.id = value;
      }
    }
    // Smart Motion Slot
    public static final int slot = 0;

    // PID Coefficients
    public static final double kP = 0;
    public static final double kI = 0;
    public static final double kD = 0;
    public static final double kIz = 0;
    public static final double kFF = 0;
    public static final double kMaxOutput = 1;
    public static final double kMinOutput = -1;

    // Smart Motion Coefficients
    public final double maxVelocity = 5000;
    public final double maxAccel = 2000;
  }

  public static final class Intake {
    public enum INTAKE {
      leftIN(31),
      rightIN(30);

      public final int id;

      INTAKE(int value) {
        this.id = value;
      }
    }
  }

  public static final class PneumaticsConsts {
    public enum PNEUMATICS {
      secFront(2, 3),
      secBack(4, 5),
      elev(1, 0);

      public final int fwd;
      public final int rev;

      PNEUMATICS(int fwd_value, int rev_value) {
        this.fwd = fwd_value;
        this.rev = rev_value;
      }
    }

    public static final int pHubCANid = 2;
  }

  public static final class DisplayConsts {
    // LCD Commands
    public static final int LCD_CLEARDISPLAY = 0x01;
    public static final int LCD_RETURNHOME = 0x02;
    public static final int LCD_ENTRYMODESET = 0x04;
    public static final int LCD_DISPLAYCONTROL = 0x08;
    public static final int LCD_CURSORSHIFT = 0x10;
    public static final int LCD_FUNCTIONSET = 0x20;
    public static final int LCD_SETCGRAMADDR = 0x40;
    public static final int LCD_SETDGRAMADDR = 0x80;

    // Flags for display on/off control
    public static final int LCD_DISPLAYON = 0x04;
    public static final int LCD_DISPLAYOFF = 0x00;
    public static final int LCD_CURSORON = 0x02;
    public static final int LCD_CURSOROFF = 0x00;
    public static final int LCD_BLINKON = 0x01;
    public static final int LCD_BLINKOFF = 0x00;

    // Flags for display entry mode
    public static final int LCD_ENTRYRIGHT = 0x00;
    public static final int LCD_ENTRYLEFT = 0x02;
    public static final int LCD_ENTRYSHIFTINCREMENT = 0x01;
    public static final int LCD_ENTRYSHIFTDECREMENT = 0x00;

    // Flags for display / cursor shift
    public static final int LCD_DISPLAYMOVE = 0x08;
    public static final int LCD_CURSORMOVE = 0x00;
    public static final int LCD_MOVERIGHT = 0x04;
    public static final int LCD_MOVELEFT = 0x00;

    // Flags for function set
    public static final int LCD_2LINE = 0x08;
    public static final int LCD_BACKLIGHT = 0x08;
    public static final int LCD_NOBACKLIGHT = 0x00;
    public static final int LCD_4BITMODE = 0x00;

    // Register Control
    public static final int EN = 0b00000100; // Enable bit
    public static final int RW = 0b00000010; // Read / Write bit
    public static final int RS = 0b00000001; // Register select bit
  }
}
